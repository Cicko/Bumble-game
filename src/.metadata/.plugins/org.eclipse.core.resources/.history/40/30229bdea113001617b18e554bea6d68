/**
 * @author Rudolf Cicko
 * @email alu0100824780@ull.edu.es
 * @description The gun class that shoots balls 
 * @subject Programaci√≥n de aplicaciones interactivas
 */
package es.ull.esit.pai.p12_disparos;

import java.awt.Graphics;
import java.awt.Point;

public class Gun {
	private final int ARROW_LENGTH = 100;
	private ShooterPanel panel;
	private Graphics g;
	private Point origin;      // The origin of the arrow that represents the gun.
	private Point vector;      // Vector from the origin to mouse position
	private Point mousePos;    // mouse positions
	private int angle;         // Angle of the arrow regarding the floor
	
	public Gun (Point anOrigin, ShooterPanel aPanel) {
		panel = aPanel;
		origin = anOrigin;
	}
	
	/**
	 * Setter for the mouse position
	 * @param aMousePos
	 */
	public void setMousePos (Point aMousePos) {
		mousePos = new Point (aMousePos.x, panel.getHeight() - aMousePos.y);
		setVector ();
		paint();
	}
	
	/**
	 * this method sets the vector from origin to mouse position
	 */
	public void setVector () {
		vector = new Point (mousePos.x - origin.x, mousePos.y - origin.y);
	}
	
	/**
	 * Getter for the vector from origin to mouse position
	 */
	public Point getVector () {
		return vector;
	}
	/**
	 * Setter for angle attribute
	 * @param anAngle
	 */
	public void setAngle (int anAngle) {
		angle = anAngle;
		paint();
	}
	
	/**
	 * Getter for angle attribute
	 * @return the angle
	 */
	public int getAngle () {
		return angle;
	}
		
	/**
	 * This method return the head position of the arrow to draw it
	 * @return the head position
	 */
/*	public Point getHeadPos () {
		double m = getInclination();
		int x1 = origin.x;
		int y1 = origin.y;
		int y = getHeadY ();
		
		int x = (int) ((int) (y1 - y - m * x1) / m);
		
		return new Point (x, y);
	}
	
	public int getHeadY () {
		return (int) ((double) Math.sin(angle) * (double) ARROW_LENGTH);
	}
	
	/**
	 * Get the inclination of the arrow
	 * @return
	 */
	public double getInclination () {
		return Math.tan(angle);
	}
	
	
	
	public Point getHeadPos () {
		double module = getModule();
		
		Point vectorFixed = new Point ((int)((double)vector.x * (double) ARROW_LENGTH / module), 
				                   (int)((double)vector.y * (double) ARROW_LENGTH / module));
		
		System.out.println ("Unitary: " + unitary);
		
		Point headPos = new Point (origin.x + vectorFixed.x, origin.y + vectorFixed.y);
		return headPos;
	}
	
	
	/**
	 * This method returns the module of the vector
	 * @return
	 */
	public double getModule () {
		return Math.sqrt(Math.pow(vector.x, 2) + Math.pow(vector.y, 2));
	}
	
	
	/**
	 * This function draws the arrow depending on the angle 
	 */
	public void paint (){
		int width = panel.getWidth();
		int height = panel.getHeight();
		g = panel.getGraphics();
		
		g.clearRect(0, 0, width, height);
		Point headPos = getHeadPos();
		
		g.drawLine (origin.x, origin.y, headPos.x, headPos.y);
	}
}
